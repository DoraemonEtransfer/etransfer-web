@import 'src/assets/theme/breakpoint.scss';
@import 'src/styles/variable.scss';

$web-content-min-margin-left: 40px;
$web-breakpoint: $content-width + ($sider-width + $web-content-min-margin-left) * 2;
$content-padding-bottom: 24px;
$web-content-padding-bottom: 80px;

.content-container {
  @include media-mobile {
    padding: 0 16px;
  }
  @include media-pad {
    width: $content-width;
    margin: auto;
    padding-bottom: $content-padding-bottom;
  }
  @include media-web {
    width: $content-width;
    margin-left: calc((100vw - $content-width) / 2);
    padding: 40px 0 $web-content-padding-bottom;
    @media screen and (max-width: $web-breakpoint) {
      margin-left: calc($web-content-min-margin-left + $sider-width);
    }
  }
  @include media-huge-screen {
    width: $content-width;
    margin-left: calc(($max-width - $content-width) / 2 - $sider-width);
    padding: 40px 0 $web-content-padding-bottom;
  }
}

// A separate class name is used here to avoid invalidation of the padding style by incorporating the padding property in the production css.
.content-container-safe-area {
  @include media-mobile {
    padding-bottom: calc($content-padding-bottom + constant(safe-area-inset-bottom));
    padding-bottom: calc($content-padding-bottom + env(safe-area-inset-bottom));
    &.withdraw-content-container {
      padding-bottom: calc(($mobile-form-footer-max-height + $content-padding-bottom) + constant(safe-area-inset-bottom));
      padding-bottom: calc(($mobile-form-footer-max-height + $content-padding-bottom) + env(safe-area-inset-bottom));
    }
  }
}

.wide-screen-content-container {
  padding: 40px 40px 64px 32px;
  overflow: auto;
  
  @include media-mobile-and-pad {
    min-width: $page-min-width;
    padding: 0;
  }
  @include media-huge-web {
    width: calc(100vw - $sider-width);
    height: calc(100vh - $web-header-height);
    max-width: calc($max-width - $sider-width);
    margin-left: $sider-width;
  }
  @include media-huge-screen {
    width: calc($max-width + 1px - $sider-width);
    height: calc(100vh - $web-header-height);
    margin: none;
  }
}
